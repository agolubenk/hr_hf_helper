{
  "openapi": "3.0.0",
  "info": {
    "title": "Huntflow API",
    "version": "1.0.0",
    "description": "API endpoints for Huntflow integration, caching, and logging in the HR Helper system."
  },
  "servers": [
    {
      "url": "/api/v1/huntflow/"
    }
  ],
  "paths": {
    "/cache/": {
      "get": {
        "summary": "List all cache entries",
        "description": "Retrieve a paginated list of all Huntflow cache entries with optional filtering and search.",
        "parameters": [
          {
            "name": "cache_key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by cache key"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by cache key"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "-created_at", "updated_at", "-updated_at", "expires_at", "-expires_at"]
            },
            "description": "Order results by field"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of cache entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/HuntflowCache"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cache/{id}/": {
      "get": {
        "summary": "Retrieve a specific cache entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Cache entry details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HuntflowCache"}
              }
            }
          },
          "404": {"description": "Cache entry not found"}
        }
      }
    },
    "/cache/expired/": {
      "get": {
        "summary": "Get expired cache entries",
        "description": "Retrieve all expired cache entries.",
        "responses": {
          "200": {
            "description": "List of expired cache entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/HuntflowCache"}
                }
              }
            }
          }
        }
      }
    },
    "/cache/clear-cache/": {
      "post": {
        "summary": "Clear all cache entries",
        "description": "Delete all cache entries.",
        "responses": {
          "200": {
            "description": "Cache cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error clearing cache",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs/": {
      "get": {
        "summary": "List all logs",
        "description": "Retrieve a paginated list of all Huntflow logs with optional filtering and search.",
        "parameters": [
          {
            "name": "log_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["GET", "POST", "PATCH", "DELETE", "ERROR"]
            },
            "description": "Filter by log type"
          },
          {
            "name": "method",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by HTTP method"
          },
          {
            "name": "status_code",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by status code"
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by endpoint or error message"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "-created_at", "status_code", "-status_code"]
            },
            "description": "Order results by field"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/HuntflowLog"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs/{id}/": {
      "get": {
        "summary": "Retrieve a specific log entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Log entry details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HuntflowLog"}
              }
            }
          },
          "404": {"description": "Log entry not found"}
        }
      }
    },
    "/logs/create-log/": {
      "post": {
        "summary": "Create a new log entry",
        "description": "Manually create a new log entry.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/HuntflowLogCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Log entry created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HuntflowLog"}
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/logs/errors/": {
      "get": {
        "summary": "Get error logs only",
        "description": "Retrieve only logs with errors (log_type='ERROR' or status_code >= 400).",
        "responses": {
          "200": {
            "description": "List of error logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/HuntflowLog"}
                }
              }
            }
          }
        }
      }
    },
    "/logs/stats/": {
      "get": {
        "summary": "Get log statistics",
        "description": "Retrieve comprehensive statistics about Huntflow logs and cache.",
        "responses": {
          "200": {
            "description": "Log and cache statistics",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HuntflowStats"}
              }
            }
          }
        }
      }
    },
    "/request/": {
      "post": {
        "summary": "Execute Huntflow API request",
        "description": "Execute a request to Huntflow API with caching support.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/HuntflowApiRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "API request executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "request_data": {"$ref": "#/components/schemas/HuntflowApiRequest"},
                    "response_data": {"type": "object"},
                    "cached": {"type": "boolean"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HuntflowCache": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "cache_key": {"type": "string", "maxLength": 255},
          "data": {"type": "object"},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true},
          "expires_at": {"type": "string", "format": "date-time", "nullable": true},
          "is_expired": {"type": "boolean", "readOnly": true},
          "age_minutes": {"type": "integer", "readOnly": true}
        },
        "required": ["cache_key", "data"]
      },
      "HuntflowLog": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "log_type": {
            "type": "string",
            "enum": ["GET", "POST", "PATCH", "DELETE", "ERROR"]
          },
          "endpoint": {"type": "string", "maxLength": 500},
          "method": {"type": "string", "maxLength": 10},
          "status_code": {"type": "integer", "nullable": true},
          "request_data": {"type": "object"},
          "response_data": {"type": "object"},
          "error_message": {"type": "string"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "is_success": {"type": "boolean", "readOnly": true},
          "is_error": {"type": "boolean", "readOnly": true}
        },
        "required": ["log_type", "endpoint", "method", "user"]
      },
      "HuntflowLogCreate": {
        "type": "object",
        "properties": {
          "log_type": {
            "type": "string",
            "enum": ["GET", "POST", "PATCH", "DELETE", "ERROR"]
          },
          "endpoint": {"type": "string", "maxLength": 500},
          "method": {"type": "string", "maxLength": 10},
          "status_code": {"type": "integer", "nullable": true},
          "request_data": {"type": "object"},
          "response_data": {"type": "object"},
          "error_message": {"type": "string"}
        },
        "required": ["log_type", "endpoint", "method"]
      },
      "HuntflowStats": {
        "type": "object",
        "properties": {
          "total_logs": {"type": "integer"},
          "success_logs": {"type": "integer"},
          "error_logs": {"type": "integer"},
          "logs_by_type": {
            "type": "object",
            "additionalProperties": {"type": "integer"}
          },
          "logs_by_user": {
            "type": "object",
            "additionalProperties": {"type": "integer"}
          },
          "recent_logs": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/HuntflowLog"}
          },
          "cache_stats": {
            "type": "object",
            "properties": {
              "total_cache_entries": {"type": "integer"},
              "expired_cache_entries": {"type": "integer"}
            }
          }
        }
      },
      "HuntflowApiRequest": {
        "type": "object",
        "properties": {
          "endpoint": {"type": "string", "maxLength": 500},
          "method": {
            "type": "string",
            "enum": ["GET", "POST", "PATCH", "DELETE"]
          },
          "data": {"type": "object", "default": {}},
          "params": {"type": "object", "default": {}},
          "use_cache": {"type": "boolean", "default": true},
          "cache_timeout": {"type": "integer", "default": 300, "minimum": 0}
        },
        "required": ["endpoint", "method"]
      }
    },
    "securitySchemes": {
      "TokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token"
      },
      "SessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      }
    }
  },
  "security": [
    {"TokenAuth": []},
    {"SessionAuth": []}
  ]
}
