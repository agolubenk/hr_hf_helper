{
  "openapi": "3.0.0",
  "info": {
    "title": "Gemini API",
    "version": "1.0.0",
    "description": "API endpoints for Google Gemini AI integration, chat sessions, and AI-powered HR analysis in the HR Helper system."
  },
  "servers": [
    {
      "url": "/api/v1/gemini/"
    }
  ],
  "paths": {
    "/chat-sessions/": {
      "get": {
        "summary": "List all chat sessions",
        "description": "Retrieve a paginated list of all chat sessions with optional filtering.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by title"
          }
        ],
        "responses": {
          "200": {
            "description": "List of chat sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/ChatSession"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new chat session",
        "description": "Create a new chat session with Gemini AI.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ChatSessionCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat session created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatSession"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/chat-sessions/{id}/": {
      "get": {
        "summary": "Retrieve a chat session",
        "description": "Get detailed information about a specific chat session with messages.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat session ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat session details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatSessionDetail"}
              }
            }
          },
          "404": {
            "description": "Chat session not found"
          }
        }
      },
      "put": {
        "summary": "Update a chat session",
        "description": "Update an existing chat session.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ChatSessionUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat session updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatSession"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Chat session not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a chat session",
        "description": "Delete a chat session (soft delete).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat session ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Chat session deleted successfully"
          },
          "404": {
            "description": "Chat session not found"
          }
        }
      }
    },
    "/chat-sessions/{id}/update-title/": {
      "post": {
        "summary": "Update chat session title",
        "description": "Update the title of a chat session.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Title updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "title": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Chat session not found"
          }
        }
      }
    },
    "/chat-messages/": {
      "get": {
        "summary": "List all chat messages",
        "description": "Retrieve a paginated list of all chat messages with optional filtering.",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by session ID"
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["user", "assistant", "system"]
            },
            "description": "Filter by message role"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by content"
          }
        ],
        "responses": {
          "200": {
            "description": "List of chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/ChatMessage"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new chat message",
        "description": "Create a new chat message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ChatMessageCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat message created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatMessage"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/chat-messages/{id}/": {
      "get": {
        "summary": "Retrieve a chat message",
        "description": "Get detailed information about a specific chat message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat message details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatMessage"}
              }
            }
          },
          "404": {
            "description": "Chat message not found"
          }
        }
      },
      "put": {
        "summary": "Update a chat message",
        "description": "Update an existing chat message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat message ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ChatMessageUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat message updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ChatMessage"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Chat message not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a chat message",
        "description": "Delete a chat message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Chat message ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Chat message deleted successfully"
          },
          "404": {
            "description": "Chat message not found"
          }
        }
      }
    },
    "/send-message/": {
      "post": {
        "summary": "Send message to Gemini AI",
        "description": "Send a message to Gemini AI and get response.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "integer",
                    "description": "Chat session ID"
                  },
                  "message": {
                    "type": "string",
                    "maxLength": 4000,
                    "description": "Message content"
                  }
                },
                "required": ["session_id", "message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "response": {"type": "string"},
                    "user_message_id": {"type": "integer"},
                    "assistant_message_id": {"type": "integer"},
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "response_time": {"type": "number"},
                        "usage_metadata": {
                          "type": "object",
                          "properties": {
                            "totalTokenCount": {"type": "integer"}
                          }
                        },
                        "finish_reason": {"type": "string"},
                        "safety_ratings": {
                          "type": "array",
                          "items": {"type": "object"}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or API key not configured"
          },
          "404": {
            "description": "Chat session not found"
          }
        }
      }
    },
    "/generate-content/": {
      "post": {
        "summary": "Generate content with Gemini AI",
        "description": "Generate content using Gemini AI with custom parameters.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GeminiApiRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "response": {"type": "string"},
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "response_time": {"type": "number"},
                        "usage_metadata": {
                          "type": "object",
                          "properties": {
                            "totalTokenCount": {"type": "integer"}
                          }
                        },
                        "finish_reason": {"type": "string"},
                        "safety_ratings": {
                          "type": "array",
                          "items": {"type": "object"}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/test-api-key/": {
      "post": {
        "summary": "Test Gemini API key",
        "description": "Test the validity of a Gemini API key.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Gemini API key to test"
                  }
                },
                "required": ["api_key"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key test result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid API key format"
          }
        }
      }
    },
    "/available-models/": {
      "get": {
        "summary": "Get available Gemini models",
        "description": "Get list of available Gemini AI models.",
        "responses": {
          "200": {
            "description": "List of available models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "models": {
                      "type": "array",
                      "items": {"type": "string"}
                    },
                    "error": {"type": "string", "nullable": true}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stats/": {
      "get": {
        "summary": "Get Gemini usage statistics",
        "description": "Get statistics about Gemini AI usage.",
        "responses": {
          "200": {
            "description": "Usage statistics",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/GeminiStats"}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatSession": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "title": {"type": "string", "maxLength": 200},
          "is_active": {"type": "boolean"},
          "messages_count": {"type": "integer", "readOnly": true},
          "last_message": {
            "type": "object",
            "nullable": true,
            "readOnly": true,
            "properties": {
              "id": {"type": "integer"},
              "role": {"type": "string"},
              "content": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          },
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["user", "title"]
      },
      "ChatSessionCreate": {
        "type": "object",
        "properties": {
          "title": {"type": "string", "maxLength": 200}
        },
        "required": ["title"]
      },
      "ChatSessionUpdate": {
        "type": "object",
        "properties": {
          "title": {"type": "string", "maxLength": 200},
          "is_active": {"type": "boolean"}
        }
      },
      "ChatSessionDetail": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "title": {"type": "string", "maxLength": 200},
          "is_active": {"type": "boolean"},
          "messages": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ChatMessage"},
            "readOnly": true
          },
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["user", "title"]
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "session": {"type": "integer"},
          "role": {
            "type": "string",
            "enum": ["user", "assistant", "system"]
          },
          "content": {"type": "string"},
          "timestamp": {"type": "string", "format": "date-time", "readOnly": true},
          "tokens_used": {"type": "integer", "nullable": true},
          "response_time": {"type": "number", "nullable": true}
        },
        "required": ["session", "role", "content"]
      },
      "ChatMessageCreate": {
        "type": "object",
        "properties": {
          "session": {"type": "integer"},
          "role": {
            "type": "string",
            "enum": ["user", "assistant", "system"]
          },
          "content": {"type": "string"}
        },
        "required": ["session", "role", "content"]
      },
      "ChatMessageUpdate": {
        "type": "object",
        "properties": {
          "content": {"type": "string"},
          "tokens_used": {"type": "integer"},
          "response_time": {"type": "number"}
        }
      },
      "GeminiApiRequest": {
        "type": "object",
        "properties": {
          "prompt": {"type": "string", "maxLength": 4000},
          "session_id": {"type": "integer"},
          "max_tokens": {
            "type": "integer",
            "default": 1000,
            "minimum": 1,
            "maximum": 4000
          },
          "temperature": {
            "type": "number",
            "default": 0.7,
            "minimum": 0.0,
            "maximum": 1.0
          },
          "save_to_session": {"type": "boolean", "default": true}
        },
        "required": ["prompt"]
      },
      "GeminiStats": {
        "type": "object",
        "properties": {
          "total_sessions": {"type": "integer"},
          "active_sessions": {"type": "integer"},
          "total_messages": {"type": "integer"},
          "total_tokens_used": {"type": "integer"},
          "average_response_time": {"type": "number"},
          "sessions_by_user": {
            "type": "object",
            "additionalProperties": {"type": "integer"}
          },
          "recent_sessions": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ChatSession"}
          },
          "top_prompts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "prompt": {"type": "string"},
                "count": {"type": "integer"}
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "SessionAuthentication": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "BasicAuthentication": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "SessionAuthentication": []
    },
    {
      "BasicAuthentication": []
    }
  ]
}
