#!/bin/bash

# üîç –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ HR Helper
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check_services.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ HR Helper —Å–µ—Ä–≤–∏—Å–æ–≤${NC}"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
echo -n "Redis: "
if redis-cli ping >/dev/null 2>&1; then
    print_success "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
    REDIS_VERSION=$(redis-cli --version | cut -d' ' -f3)
    echo "   –í–µ—Ä—Å–∏—è: $REDIS_VERSION"
else
    print_error "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Celery Worker
echo -n "Celery Worker: "
CELERY_PROCESSES=$(ps aux | grep "celery.*worker" | grep -v grep | wc -l)
if [ $CELERY_PROCESSES -gt 0 ]; then
    print_success "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç ($CELERY_PROCESSES –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
    ps aux | grep "celery.*worker" | grep -v grep | while read line; do
        PID=$(echo $line | awk '{print $2}')
        echo "   PID: $PID"
    done
else
    print_error "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Django —Å–µ—Ä–≤–µ—Ä
echo -n "Django —Å–µ—Ä–≤–µ—Ä: "
DJANGO_PROCESSES=$(ps aux | grep "manage.py.*runserver" | grep -v grep | wc -l)
if [ $DJANGO_PROCESSES -gt 0 ]; then
    print_success "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç ($DJANGO_PROCESSES –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
    ps aux | grep "manage.py.*runserver" | grep -v grep | while read line; do
        PID=$(echo $line | awk '{print $2}')
        echo "   PID: $PID"
    done
else
    print_error "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
echo ""
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 6379 (Redis)
echo -n "–ü–æ—Ä—Ç 6379 (Redis): "
if lsof -i :6379 >/dev/null 2>&1; then
    print_success "‚úÖ –ó–∞–Ω—è—Ç"
else
    print_error "‚ùå –°–≤–æ–±–æ–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 8000 (Django)
echo -n "–ü–æ—Ä—Ç 8000 (Django): "
if lsof -i :8000 >/dev/null 2>&1; then
    print_success "‚úÖ –ó–∞–Ω—è—Ç"
else
    print_error "‚ùå –°–≤–æ–±–æ–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo ""
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"

echo -n "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (http://127.0.0.1:8000/): "
if curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/ | grep -q "200\|301\|302"; then
    print_success "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
else
    print_error "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Celery –∑–∞–¥–∞—á–∏
echo ""
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Celery:"

if command -v celery >/dev/null 2>&1; then
    echo -n "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: "
    ACTIVE_TASKS=$(celery -A hrhelper inspect active 2>/dev/null | grep -c "celery@" || echo "0")
    if [ "$ACTIVE_TASKS" -gt 0 ]; then
        print_warning "‚ö†Ô∏è $ACTIVE_TASKS –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á"
    else
        print_success "‚úÖ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á"
    fi
    
    echo -n "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏: "
    SCHEDULED_TASKS=$(celery -A hrhelper inspect scheduled 2>/dev/null | grep -c "celery@" || echo "0")
    if [ "$SCHEDULED_TASKS" -gt 0 ]; then
        print_warning "‚ö†Ô∏è $SCHEDULED_TASKS –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"
    else
        print_success "‚úÖ –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"
    fi
else
    print_warning "‚ö†Ô∏è Celery CLI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo ""
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:"

if [ -f "logs/django.log" ]; then
    DJANGO_LOG_SIZE=$(wc -l < logs/django.log)
    print_success "‚úÖ Django –ª–æ–≥: $DJANGO_LOG_SIZE —Å—Ç—Ä–æ–∫"
else
    print_warning "‚ö†Ô∏è Django –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ -f "logs/celery.log" ]; then
    CELERY_LOG_SIZE=$(wc -l < logs/celery.log)
    print_success "‚úÖ Celery –ª–æ–≥: $CELERY_LOG_SIZE —Å—Ç—Ä–æ–∫"
else
    print_warning "‚ö†Ô∏è Celery –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo ""
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"

if [ -f "db.sqlite3" ]; then
    DB_SIZE=$(du -h db.sqlite3 | cut -f1)
    print_success "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_SIZE"
else
    print_error "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo ""
echo "=================================="
ALL_SERVICES_OK=true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
if ! redis-cli ping >/dev/null 2>&1; then
    ALL_SERVICES_OK=false
fi

if [ $CELERY_PROCESSES -eq 0 ]; then
    ALL_SERVICES_OK=false
fi

if [ $DJANGO_PROCESSES -eq 0 ]; then
    ALL_SERVICES_OK=false
fi

if [ "$ALL_SERVICES_OK" = true ]; then
    print_success "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
    echo ""
    echo -e "${BLUE}üìã –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:${NC}"
    echo -e "  ‚Ä¢ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: ${GREEN}http://127.0.0.1:8000/${NC}"
    echo -e "  ‚Ä¢ –ê–¥–º–∏–Ω–∫–∞: ${GREEN}http://127.0.0.1:8000/admin/${NC}"
    echo -e "  ‚Ä¢ ClickUp –∏–º–ø–æ—Ä—Ç: ${GREEN}http://127.0.0.1:8000/clickup/bulk-import/${NC}"
else
    print_error "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç!"
    echo ""
    echo -e "${YELLOW}üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
    echo -e "  ${BLUE}./start_services.sh${NC}"
fi

echo ""


