"""
–°–∏–≥–Ω–∞–ª—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É –∏–∑ signals.py —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è
"""
from django.db.models.signals import post_save, pre_save
from django.dispatch import receiver
from django.contrib.auth.models import Group
from ..models import User
from .user_service import UserService


@receiver(post_save, sender=User)
def create_user_profile(sender, instance, created, **kwargs):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
    """
    if created:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        from .role_service import RoleService
        if not instance.groups.filter(name='–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏').exists():
            success, message = RoleService.assign_role_to_user(instance, '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏')
            if success:
                print(f"‚úÖ SIGNAL: –ù–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {instance.username} –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è")
            else:
                print(f"‚ö†Ô∏è SIGNAL: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è: {message}")


@receiver(pre_save, sender=User)
def update_user_full_name(sender, instance, **kwargs):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ full_name –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ first_name –∏–ª–∏ last_name
    """
    if instance.pk:  # –¢–æ–ª—å–∫–æ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            old_instance = User.objects.get(pk=instance.pk)
            
            # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å first_name –∏–ª–∏ last_name, –æ–±–Ω–æ–≤–ª—è–µ–º full_name
            if (old_instance.first_name != instance.first_name or 
                old_instance.last_name != instance.last_name):
                
                if instance.first_name and instance.last_name:
                    instance.full_name = f"{instance.first_name} {instance.last_name}"
                elif instance.first_name:
                    instance.full_name = instance.first_name
                elif instance.last_name:
                    instance.full_name = instance.last_name
                    
        except User.DoesNotExist:
            pass  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º


@receiver(post_save, sender=User)
def log_user_activity(sender, instance, created, **kwargs):
    """
    –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    if created:
        print(f"üìù SIGNAL: –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {instance.username} ({instance.email})")
    else:
        print(f"üìù SIGNAL: –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {instance.username}")


@receiver(post_save, sender=User)
def sync_user_groups(sender, instance, **kwargs):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–ª–∞–≥–∞–º–∏ —Ä–æ–ª–µ–π
    """
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥–∏ —Ä–æ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥—Ä—É–ø–ø
    instance.is_observer_active = instance.groups.filter(name='–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏').exists()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    if instance.pk:
        try:
            old_instance = User.objects.get(pk=instance.pk)
            if old_instance.is_observer_active != instance.is_observer_active:
                instance.save(update_fields=['is_observer_active'])
        except User.DoesNotExist:
            pass
