# Generated by Django 5.2.6 on 2025-09-05 13:56

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('interviewers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Краткое описание правила привлечения', max_length=200, verbose_name='Название правила')),
                ('description', models.TextField(blank=True, help_text='Подробное описание правила', verbose_name='Описание')),
                ('daily_limit', models.PositiveIntegerField(default=5, help_text='Максимальное количество интервью в день для одного интервьюера', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Лимит в день')),
                ('weekly_limit', models.PositiveIntegerField(default=20, help_text='Максимальное количество интервью в неделю для одного интервьюера', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)], verbose_name='Лимит в неделю')),
                ('min_grade', models.DecimalField(decimal_places=2, help_text='Минимальный грейд для привлечения интервьюера', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Минимальный грейд')),
                ('max_grade', models.DecimalField(decimal_places=2, help_text='Максимальный грейд для привлечения интервьюера', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Максимальный грейд')),
                ('interview_type', models.CharField(choices=[('technical', 'Техническое интервью'), ('hr', 'HR интервью'), ('final', 'Финальное интервью'), ('screening', 'Скрининг'), ('cultural', 'Культурное интервью')], default='technical', help_text='Тип интервью для которого применяется правило', max_length=20, verbose_name='Тип интервью')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], default='medium', help_text='Приоритет правила (влияет на порядок применения)', max_length=10, verbose_name='Приоритет')),
                ('min_advance_notice_hours', models.PositiveIntegerField(default=24, help_text='Минимальное время уведомления интервьюера в часах', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(168)], verbose_name='Минимальное уведомление (часы)')),
                ('max_advance_notice_hours', models.PositiveIntegerField(default=168, help_text='Максимальное время уведомления интервьюера в часах', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(720)], verbose_name='Максимальное уведомление (часы)')),
                ('require_calendar_link', models.BooleanField(default=True, help_text='Обязательно ли наличие ссылки на календарь у интервьюера', verbose_name='Требовать ссылку на календарь')),
                ('allow_weekend_interviews', models.BooleanField(default=False, help_text='Можно ли привлекать интервьюера в выходные дни', verbose_name='Разрешить интервью в выходные')),
                ('allow_holiday_interviews', models.BooleanField(default=False, help_text='Можно ли привлекать интервьюера в праздничные дни', verbose_name='Разрешить интервью в праздники')),
                ('work_start_time', models.TimeField(default='09:00', help_text='Время начала рабочего дня для планирования интервью', verbose_name='Начало рабочего времени')),
                ('work_end_time', models.TimeField(default='18:00', help_text='Время окончания рабочего дня для планирования интервью', verbose_name='Конец рабочего времени')),
                ('is_active', models.BooleanField(default=True, help_text='Активно ли правило для применения', verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Правило привлечения интервьюеров',
                'verbose_name_plural': 'Правила привлечения интервьюеров',
                'ordering': ['-priority', 'min_grade', 'name'],
            },
        ),
    ]
