from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.test import Client
from django.urls import reverse
from apps.google_oauth.models import GoogleOAuthAccount

User = get_user_model()


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å views —Å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'

    def handle(self, *args, **options):
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å OAuth –∞–∫–∫–∞—É–Ω—Ç–æ–º
        oauth_accounts = GoogleOAuthAccount.objects.all()
        if not oauth_accounts:
            self.stdout.write(
                self.style.ERROR('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º Google OAuth')
            )
            return
        
        oauth_account = oauth_accounts[0]
        user = oauth_account.user
        
        self.stdout.write(
            self.style.SUCCESS(f'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º views –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username} (ID: {user.id})')
        )
        self.stdout.write(f'üìß OAuth email: {oauth_account.email}')
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        client = Client()
        client.force_login(user)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º dashboard
        self.stdout.write('\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º dashboard:')
        try:
            response = client.get('/google-oauth/')
            self.stdout.write(f'  Status: {response.status_code}')
            if response.status_code == 200:
                self.stdout.write('  ‚úÖ Dashboard –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è Dashboard –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}')
        except Exception as e:
            self.stdout.write(f'  ‚ùå –û—à–∏–±–∫–∞ dashboard: {e}')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º calendar
        self.stdout.write('\nüìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º calendar:')
        try:
            response = client.get('/google-oauth/calendar/')
            self.stdout.write(f'  Status: {response.status_code}')
            if response.status_code == 200:
                self.stdout.write('  ‚úÖ Calendar –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–±—ã—Ç–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
                if hasattr(response, 'context') and 'page_obj' in response.context:
                    events = response.context['page_obj']
                    if events is not None:
                        self.stdout.write(f'  üìã –°–æ–±—ã—Ç–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(events)}')
                    else:
                        self.stdout.write('  üìã –°–æ–±—ã—Ç–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: 0 (None)')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è Calendar –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}')
        except Exception as e:
            self.stdout.write(f'  ‚ùå –û—à–∏–±–∫–∞ calendar: {e}')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º drive
        self.stdout.write('\nüìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º drive:')
        try:
            response = client.get('/google-oauth/drive/')
            self.stdout.write(f'  Status: {response.status_code}')
            if response.status_code == 200:
                self.stdout.write('  ‚úÖ Drive –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
                if hasattr(response, 'context') and 'page_obj' in response.context:
                    files = response.context['page_obj']
                    if files is not None:
                        self.stdout.write(f'  üìã –§–∞–π–ª–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(files)}')
                    else:
                        self.stdout.write('  üìã –§–∞–π–ª–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: 0 (None)')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è Drive –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}')
        except Exception as e:
            self.stdout.write(f'  ‚ùå –û—à–∏–±–∫–∞ drive: {e}')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º sheets
        self.stdout.write('\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º sheets:')
        try:
            response = client.get('/google-oauth/sheets/')
            self.stdout.write(f'  Status: {response.status_code}')
            if response.status_code == 200:
                self.stdout.write('  ‚úÖ Sheets –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
                if hasattr(response, 'context') and 'sheets' in response.context:
                    sheets = response.context['sheets']
                    if sheets is not None:
                        self.stdout.write(f'  üìã –¢–∞–±–ª–∏—Ü –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(sheets)}')
                    else:
                        self.stdout.write('  üìã –¢–∞–±–ª–∏—Ü –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: 0 (None)')
            else:
                self.stdout.write(f'  ‚ö†Ô∏è Sheets –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}')
        except Exception as e:
            self.stdout.write(f'  ‚ùå –û—à–∏–±–∫–∞ sheets: {e}')
        
        self.stdout.write(
            self.style.SUCCESS('\n‚úÖ –¢–µ—Å—Ç views –∑–∞–≤–µ—Ä—à–µ–Ω')
        )
