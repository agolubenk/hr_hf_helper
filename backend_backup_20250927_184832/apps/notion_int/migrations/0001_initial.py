# Generated by Django 5.2.5 on 2025-09-19 10:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotionBulkImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('running', 'Выполняется'), ('completed', 'Завершен'), ('failed', 'Ошибка'), ('cancelled', 'Отменен'), ('stopped', 'Остановлен')], default='running', max_length=20, verbose_name='Статус')),
                ('total_pages', models.PositiveIntegerField(default=0, verbose_name='Всего страниц')),
                ('processed_pages', models.PositiveIntegerField(default=0, verbose_name='Обработано страниц')),
                ('successful_pages', models.PositiveIntegerField(default=0, verbose_name='Успешно импортировано')),
                ('failed_pages', models.PositiveIntegerField(default=0, verbose_name='Неудачных импортов')),
                ('failed_page_ids', models.JSONField(blank=True, default=list, help_text='Список ID страниц, которые не удалось импортировать', verbose_name='ID неудачных страниц')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('celery_task_id', models.CharField(blank=True, max_length=255, verbose_name='ID задачи Celery')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Завершено')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notion_bulk_imports', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Массовый импорт Notion',
                'verbose_name_plural': 'Массовые импорты Notion',
                'db_table': 'notion_bulk_imports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotionPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.CharField(help_text='Уникальный ID страницы в Notion', max_length=100, unique=True, verbose_name='ID страницы')),
                ('title', models.CharField(max_length=500, verbose_name='Название страницы')),
                ('content', models.TextField(blank=True, verbose_name='Содержимое страницы')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='Статус страницы')),
                ('priority', models.CharField(blank=True, max_length=50, verbose_name='Приоритет')),
                ('date_created', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('date_updated', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('url', models.URLField(verbose_name='Ссылка на страницу')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='Список вложений в формате JSON', verbose_name='Вложения')),
                ('assignees', models.JSONField(blank=True, default=list, help_text='Список исполнителей в формате JSON', verbose_name='Исполнители')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Список тегов в формате JSON', verbose_name='Теги')),
                ('custom_properties', models.JSONField(blank=True, default=dict, help_text='Дополнительные свойства страницы в формате JSON', verbose_name='Дополнительные свойства')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано в системе')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено в системе')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notion_pages', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Страница Notion',
                'verbose_name_plural': 'Страницы Notion',
                'db_table': 'notion_pages',
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='NotionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_id', models.CharField(help_text='ID базы данных в Notion', max_length=100, verbose_name='ID базы данных')),
                ('auto_sync', models.BooleanField(default=True, help_text='Автоматически синхронизировать страницы', verbose_name='Автоматическая синхронизация')),
                ('sync_interval', models.PositiveIntegerField(default=30, help_text='Интервал автоматической синхронизации в минутах', verbose_name='Интервал синхронизации (минуты)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True, verbose_name='Последняя синхронизация')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notion_settings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройки Notion',
                'verbose_name_plural': 'Настройки Notion',
                'db_table': 'notion_settings',
            },
        ),
        migrations.CreateModel(
            name='NotionSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Успешно'), ('error', 'Ошибка'), ('partial', 'Частично')], max_length=20, verbose_name='Статус синхронизации')),
                ('pages_processed', models.PositiveIntegerField(default=0, verbose_name='Обработано страниц')),
                ('pages_created', models.PositiveIntegerField(default=0, verbose_name='Создано страниц')),
                ('pages_updated', models.PositiveIntegerField(default=0, verbose_name='Обновлено страниц')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('sync_duration', models.FloatField(blank=True, null=True, verbose_name='Длительность синхронизации (секунды)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время синхронизации')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notion_sync_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог синхронизации Notion',
                'verbose_name_plural': 'Логи синхронизации Notion',
                'db_table': 'notion_sync_logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
