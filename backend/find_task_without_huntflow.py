#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á–∏ –±–µ–∑ —Ç–µ–≥–∞ huntflow –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth import get_user_model
from apps.clickup_int.services import ClickUpService
from apps.clickup_int.models import ClickUpSettings

User = get_user_model()

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ClickUp
        user = User.objects.filter(clickup_api_key__isnull=False).exclude(clickup_api_key='').first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ClickUp –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ClickUp
        try:
            clickup_settings = ClickUpSettings.objects.get(user=user)
            list_id = clickup_settings.list_id
            if not list_id:
                print(f"‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω list_id –≤ ClickUpSettings –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return
        except ClickUpSettings.DoesNotExist:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ClickUp –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
        
        print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º list_id: {list_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å ClickUp
        clickup_service = ClickUpService(user.clickup_api_key)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        print(f"\nüîç –ò—â–µ–º –∑–∞–¥–∞—á–∏ –±–µ–∑ —Ç–µ–≥–∞ huntflow...")
        tasks = clickup_service.get_tasks(list_id)
        
        if not tasks:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ {list_id}")
            return
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
        
        tasks_without_huntflow = []
        for task in tasks:
            task_id = task.get('id')
            task_name = task.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            tags = task.get('tags', [])
            
            has_huntflow_tag = any(
                tag.get('name', '').lower() == 'huntflow' 
                for tag in tags if isinstance(tag, dict)
            )
            
            if not has_huntflow_tag:
                tasks_without_huntflow.append({
                    'id': task_id,
                    'name': task_name,
                    'tags': tags
                })
        
        print(f"\nüìã –ó–∞–¥–∞—á –±–µ–∑ —Ç–µ–≥–∞ huntflow: {len(tasks_without_huntflow)}")
        
        if tasks_without_huntflow:
            print(f"\nüéØ –ó–∞–¥–∞—á–∏ –±–µ–∑ —Ç–µ–≥–∞ huntflow:")
            for i, task in enumerate(tasks_without_huntflow[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   {i+1}. ID: {task['id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {task['name']}")
                if task['tags']:
                    tag_names = [tag.get('name', 'Unknown') for tag in task['tags'] if isinstance(tag, dict)]
                    print(f"      –¢–µ–≥–∏: {', '.join(tag_names) if tag_names else '–ù–µ—Ç —Ç–µ–≥–æ–≤'}")
                else:
                    print(f"      –¢–µ–≥–∏: –ù–µ—Ç —Ç–µ–≥–æ–≤")
            
            print(f"\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö task_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–Ω–æ—Å–∞")
        else:
            print(f"‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ —É–∂–µ –∏–º–µ—é—Ç —Ç–µ–≥ huntflow")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
