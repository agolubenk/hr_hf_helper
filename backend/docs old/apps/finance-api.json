{
  "openapi": "3.0.0",
  "info": {
    "title": "Finance API",
    "version": "1.0.0",
    "description": "API endpoints for financial data management, including grades, currency rates, taxes, salary ranges, and benchmarks."
  },
  "servers": [
    {
      "url": "/api/v1/finance/"
    }
  ],
  "paths": {
    "/grades/": {
      "get": {
        "summary": "List all grades",
        "description": "Retrieve a paginated list of all grades with optional filtering and search.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search grades by name"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name", "-name", "id", "-id"]
            },
            "description": "Order results by field"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of grades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Grade"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new grade",
        "description": "Create a new grade with the specified name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GradeCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Grade created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Grade"}
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/grades/{id}/": {
      "get": {
        "summary": "Retrieve a specific grade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Grade details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Grade"}
              }
            }
          },
          "404": {"description": "Grade not found"}
        }
      },
      "put": {
        "summary": "Update a grade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GradeCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grade updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Grade"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Grade not found"}
        }
      },
      "patch": {
        "summary": "Partially update a grade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GradeCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grade partially updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Grade"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Grade not found"}
        }
      },
      "delete": {
        "summary": "Delete a grade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Grade deleted successfully"},
          "404": {"description": "Grade not found"}
        }
      }
    },
    "/grades/stats/": {
      "get": {
        "summary": "Get grade statistics",
        "description": "Retrieve statistics about grades usage.",
        "responses": {
          "200": {
            "description": "Grade statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_grades": {"type": "integer"},
                    "most_used_grade": {"type": "string"},
                    "usage_by_grade": {
                      "type": "object",
                      "additionalProperties": {"type": "integer"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency-rates/": {
      "get": {
        "summary": "List currency rates",
        "description": "Retrieve a list of currency rates with optional filtering.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["BYN", "USD", "PLN"]
            },
            "description": "Filter by currency code"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["code", "-fetched_at", "rate", "-rate"]
            },
            "description": "Order results by field"
          }
        ],
        "responses": {
          "200": {
            "description": "List of currency rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/CurrencyRate"}
                }
              }
            }
          }
        }
      }
    },
    "/currency-rates/update-rates/": {
      "post": {
        "summary": "Force update currency rates",
        "description": "Manually trigger currency rates update from NBRB.",
        "responses": {
          "200": {
            "description": "Currency rates updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {"type": "string"},
                    "updated_rates": {"type": "integer"},
                    "timestamp": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency-rates/latest/": {
      "get": {
        "summary": "Get latest currency rates",
        "description": "Retrieve the most recent currency rates.",
        "responses": {
          "200": {
            "description": "Latest currency rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rates": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/CurrencyRate"}
                    },
                    "last_updated": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pln-taxes/": {
      "get": {
        "summary": "List PLN taxes",
        "description": "Retrieve a list of PLN tax rates.",
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "schema": {"type": "boolean"},
            "description": "Filter by active status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {"type": "string"},
            "description": "Search taxes by name"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name", "-name", "rate", "-rate", "created_at", "-created_at"]
            },
            "description": "Order results by field"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PLN taxes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/PLNTax"}
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new PLN tax",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/PLNTaxCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "PLN tax created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/PLNTax"}
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/pln-taxes/{id}/": {
      "get": {
        "summary": "Retrieve a specific PLN tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "PLN tax details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/PLNTax"}
              }
            }
          },
          "404": {"description": "PLN tax not found"}
        }
      },
      "put": {
        "summary": "Update a PLN tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/PLNTaxCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "PLN tax updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/PLNTax"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "PLN tax not found"}
        }
      },
      "patch": {
        "summary": "Partially update a PLN tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/PLNTaxCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "PLN tax partially updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/PLNTax"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "PLN tax not found"}
        }
      },
      "delete": {
        "summary": "Delete a PLN tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "PLN tax deleted successfully"},
          "404": {"description": "PLN tax not found"}
        }
      }
    },
    "/pln-taxes/calculate-gross/": {
      "post": {
        "summary": "Calculate gross salary from net",
        "description": "Calculate gross salary from net salary using current PLN tax rates.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "net_salary": {
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                  }
                },
                "required": ["net_salary"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gross salary calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "net_salary": {"type": "number", "format": "decimal"},
                    "gross_salary": {"type": "number", "format": "decimal"},
                    "year": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/pln-taxes/calculate-net/": {
      "post": {
        "summary": "Calculate net salary from gross",
        "description": "Calculate net salary from gross salary using current PLN tax rates.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gross_salary": {
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                  }
                },
                "required": ["gross_salary"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Net salary calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gross_salary": {"type": "number", "format": "decimal"},
                    "net_salary": {"type": "number", "format": "decimal"},
                    "year": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/salary-ranges/": {
      "get": {
        "summary": "List salary ranges",
        "description": "Retrieve a list of salary ranges with optional filtering.",
        "parameters": [
          {
            "name": "vacancy",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by vacancy ID"
          },
          {
            "name": "grade",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by grade ID"
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {"type": "boolean"},
            "description": "Filter by active status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {"type": "string"},
            "description": "Search by vacancy or grade name"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["salary_min_usd", "-salary_min_usd", "created_at", "-created_at"]
            },
            "description": "Order results by field"
          }
        ],
        "responses": {
          "200": {
            "description": "List of salary ranges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/SalaryRange"}
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new salary range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SalaryRangeCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Salary range created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SalaryRange"}
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/salary-ranges/{id}/": {
      "get": {
        "summary": "Retrieve a specific salary range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Salary range details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SalaryRange"}
              }
            }
          },
          "404": {"description": "Salary range not found"}
        }
      },
      "put": {
        "summary": "Update a salary range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SalaryRangeCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Salary range updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SalaryRange"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Salary range not found"}
        }
      },
      "patch": {
        "summary": "Partially update a salary range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SalaryRangeCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Salary range partially updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SalaryRange"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Salary range not found"}
        }
      },
      "delete": {
        "summary": "Delete a salary range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Salary range deleted successfully"},
          "404": {"description": "Salary range not found"}
        }
      }
    },
    "/salary-ranges/update-currency-amounts/": {
      "post": {
        "summary": "Update currency amounts for all salary ranges",
        "description": "Recalculate currency amounts for all salary ranges based on current exchange rates.",
        "responses": {
          "200": {
            "description": "Currency amounts updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {"type": "string"},
                    "updated_ranges": {"type": "integer"},
                    "timestamp": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salary-ranges/stats/": {
      "get": {
        "summary": "Get salary range statistics",
        "description": "Retrieve statistics about salary ranges.",
        "responses": {
          "200": {
            "description": "Salary range statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_ranges": {"type": "integer"},
                    "active_ranges": {"type": "integer"},
                    "average_salary_usd": {"type": "number", "format": "decimal"},
                    "salary_by_grade": {
                      "type": "object",
                      "additionalProperties": {"type": "number", "format": "decimal"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/benchmarks/": {
      "get": {
        "summary": "List benchmarks",
        "description": "Retrieve a list of salary benchmarks with optional filtering.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["candidate", "vacancy"]
            },
            "description": "Filter by benchmark type"
          },
          {
            "name": "vacancy",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by vacancy ID"
          },
          {
            "name": "grade",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by grade ID"
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {"type": "boolean"},
            "description": "Filter by active status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {"type": "string"},
            "description": "Search by vacancy, grade, location, or domain"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["salary_from", "-salary_from", "date_added", "-date_added"]
            },
            "description": "Order results by field"
          }
        ],
        "responses": {
          "200": {
            "description": "List of benchmarks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Benchmark"}
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new benchmark",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/BenchmarkCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Benchmark created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Benchmark"}
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/benchmarks/{id}/": {
      "get": {
        "summary": "Retrieve a specific benchmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Benchmark details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Benchmark"}
              }
            }
          },
          "404": {"description": "Benchmark not found"}
        }
      },
      "put": {
        "summary": "Update a benchmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/BenchmarkCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Benchmark updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Benchmark"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Benchmark not found"}
        }
      },
      "patch": {
        "summary": "Partially update a benchmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/BenchmarkCreate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Benchmark partially updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Benchmark"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Benchmark not found"}
        }
      },
      "delete": {
        "summary": "Delete a benchmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Benchmark deleted successfully"},
          "404": {"description": "Benchmark not found"}
        }
      }
    },
    "/benchmarks/stats/": {
      "get": {
        "summary": "Get benchmark statistics",
        "description": "Retrieve statistics about benchmarks.",
        "responses": {
          "200": {
            "description": "Benchmark statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_benchmarks": {"type": "integer"},
                    "candidate_benchmarks": {"type": "integer"},
                    "vacancy_benchmarks": {"type": "integer"},
                    "average_salary": {"type": "number", "format": "decimal"},
                    "salary_by_type": {
                      "type": "object",
                      "properties": {
                        "candidate": {"type": "number", "format": "decimal"},
                        "vacancy": {"type": "number", "format": "decimal"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/benchmark-settings/": {
      "get": {
        "summary": "Get benchmark settings",
        "description": "Retrieve the singleton benchmark settings configuration.",
        "responses": {
          "200": {
            "description": "Benchmark settings",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BenchmarkSettings"}
              }
            }
          }
        }
      }
    },
    "/benchmark-settings/{id}/": {
      "put": {
        "summary": "Update benchmark settings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/BenchmarkSettingsUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Benchmark settings updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BenchmarkSettings"}
              }
            }
          },
          "400": {"description": "Validation error"},
          "404": {"description": "Benchmark settings not found"}
        }
      }
    },
    "/salary-calculations/convert/": {
      "post": {
        "summary": "Convert salary between currencies",
        "description": "Convert salary amount between different currencies with optional tax calculations.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                  },
                  "from_currency": {
                    "type": "string",
                    "enum": ["USD", "BYN", "PLN"]
                  },
                  "to_currency": {
                    "type": "string",
                    "enum": ["USD", "BYN", "PLN"]
                  },
                  "include_taxes": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": ["amount", "from_currency", "to_currency"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Salary converted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {"type": "number", "format": "decimal"},
                    "from_currency": {"type": "string"},
                    "to_currency": {"type": "string"},
                    "converted_amount": {"type": "number", "format": "decimal"},
                    "exchange_rate": {"type": "number", "format": "decimal"},
                    "include_taxes": {"type": "boolean"},
                    "tax_amount": {"type": "number", "format": "decimal"},
                    "final_amount": {"type": "number", "format": "decimal"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Grade": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "name": {"type": "string", "maxLength": 100}
        },
        "required": ["name"]
      },
      "GradeCreate": {
        "type": "object",
        "properties": {
          "name": {"type": "string", "maxLength": 100}
        },
        "required": ["name"]
      },
      "CurrencyRate": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "code": {"type": "string", "maxLength": 3},
          "rate": {"type": "string", "format": "decimal"},
          "scale": {"type": "integer", "default": 1},
          "fetched_at": {"type": "string", "format": "date-time"},
          "status_info": {"type": "string", "readOnly": true},
          "display_rate": {"type": "string", "readOnly": true}
        },
        "required": ["code", "rate", "scale"]
      },
      "PLNTax": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "name": {"type": "string", "maxLength": 100},
          "rate": {"type": "string", "format": "decimal"},
          "is_active": {"type": "boolean", "default": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["name", "rate"]
      },
      "PLNTaxCreate": {
        "type": "object",
        "properties": {
          "name": {"type": "string", "maxLength": 100},
          "rate": {"type": "string", "format": "decimal"},
          "is_active": {"type": "boolean", "default": true}
        },
        "required": ["name", "rate"]
      },
      "SalaryRange": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "vacancy": {"type": "integer"},
          "vacancy_name": {"type": "string", "readOnly": true},
          "grade": {"type": "integer"},
          "grade_name": {"type": "string", "readOnly": true},
          "salary_min_usd": {"type": "string", "format": "decimal"},
          "salary_max_usd": {"type": "string", "format": "decimal"},
          "salary_min_byn": {"type": "string", "format": "decimal", "readOnly": true},
          "salary_max_byn": {"type": "string", "format": "decimal", "readOnly": true},
          "salary_min_pln": {"type": "string", "format": "decimal", "readOnly": true},
          "salary_max_pln": {"type": "string", "format": "decimal", "readOnly": true},
          "is_active": {"type": "boolean", "default": true},
          "salary_range_usd": {"type": "string", "readOnly": true},
          "salary_range_byn": {"type": "string", "readOnly": true},
          "salary_range_pln": {"type": "string", "readOnly": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["vacancy", "grade", "salary_min_usd", "salary_max_usd"]
      },
      "SalaryRangeCreate": {
        "type": "object",
        "properties": {
          "vacancy": {"type": "integer"},
          "grade": {"type": "integer"},
          "salary_min_usd": {"type": "string", "format": "decimal"},
          "salary_max_usd": {"type": "string", "format": "decimal"},
          "is_active": {"type": "boolean", "default": true}
        },
        "required": ["vacancy", "grade", "salary_min_usd", "salary_max_usd"]
      },
      "Benchmark": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "type": {"type": "string", "enum": ["candidate", "vacancy"]},
          "date_added": {"type": "string", "format": "date"},
          "vacancy": {"type": "integer"},
          "vacancy_name": {"type": "string", "readOnly": true},
          "grade": {"type": "integer"},
          "grade_name": {"type": "string", "readOnly": true},
          "salary_from": {"type": "string", "format": "decimal"},
          "salary_to": {"type": "string", "format": "decimal", "nullable": true},
          "location": {"type": "string", "maxLength": 100},
          "notes": {"type": "string"},
          "work_format": {"type": "string", "enum": ["офис", "гибрид", "удаленка", "all world"]},
          "compensation": {"type": "string"},
          "benefits": {"type": "string"},
          "development": {"type": "string"},
          "technologies": {"type": "string"},
          "domain": {"type": "string"},
          "is_active": {"type": "boolean", "default": true},
          "type_icon": {"type": "string", "readOnly": true},
          "type_color": {"type": "string", "readOnly": true},
          "salary_display": {"type": "string", "readOnly": true},
          "salary_from_display": {"type": "string", "readOnly": true},
          "salary_to_display": {"type": "string", "readOnly": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["type", "date_added", "vacancy", "grade", "salary_from"]
      },
      "BenchmarkCreate": {
        "type": "object",
        "properties": {
          "type": {"type": "string", "enum": ["candidate", "vacancy"]},
          "date_added": {"type": "string", "format": "date"},
          "vacancy": {"type": "integer"},
          "grade": {"type": "integer"},
          "salary_from": {"type": "string", "format": "decimal"},
          "salary_to": {"type": "string", "format": "decimal", "nullable": true},
          "location": {"type": "string", "maxLength": 100},
          "notes": {"type": "string"},
          "work_format": {"type": "string", "enum": ["офис", "гибрид", "удаленка", "all world"]},
          "compensation": {"type": "string"},
          "benefits": {"type": "string"},
          "development": {"type": "string"},
          "technologies": {"type": "string"},
          "domain": {"type": "string"},
          "is_active": {"type": "boolean", "default": true}
        },
        "required": ["type", "date_added", "vacancy", "grade", "salary_from"]
      },
      "BenchmarkSettings": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "average_calculation_period_days": {"type": "integer", "default": 90},
          "belarus_tax_rate": {"type": "string", "format": "decimal", "default": "13.00"},
          "ai_analysis_prompt": {"type": "string"},
          "data_sources": {"type": "array", "items": {"type": "string"}},
          "data_sources_display": {"type": "string", "readOnly": true},
          "max_daily_tasks": {"type": "integer", "default": 100},
          "vacancy_fields": {"type": "array", "items": {"type": "string"}},
          "vacancy_fields_display": {"type": "string", "readOnly": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        }
      },
      "BenchmarkSettingsUpdate": {
        "type": "object",
        "properties": {
          "average_calculation_period_days": {"type": "integer"},
          "belarus_tax_rate": {"type": "string", "format": "decimal"},
          "ai_analysis_prompt": {"type": "string"},
          "data_sources": {"type": "array", "items": {"type": "string"}},
          "max_daily_tasks": {"type": "integer"},
          "vacancy_fields": {"type": "array", "items": {"type": "string"}}
        }
      }
    },
    "securitySchemes": {
      "TokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token"
      },
      "SessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      }
    }
  },
  "security": [
    {"TokenAuth": []},
    {"SessionAuth": []}
  ]
}
