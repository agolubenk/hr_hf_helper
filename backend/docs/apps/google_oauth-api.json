{
  "openapi": "3.0.0",
  "info": {
    "title": "Google OAuth API",
    "version": "1.0.0",
    "description": "API endpoints for Google OAuth integration, calendar management, drive operations, and HR automation in the HR Helper system."
  },
  "servers": [
    {
      "url": "/api/v1/google-oauth/"
    }
  ],
  "paths": {
    "/oauth-accounts/": {
      "get": {
        "summary": "List all Google OAuth accounts",
        "description": "Retrieve a paginated list of all Google OAuth accounts with optional filtering.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by email"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by name or email"
          }
        ],
        "responses": {
          "200": {
            "description": "List of OAuth accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/GoogleOAuthAccount"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Google OAuth account",
        "description": "Create a new Google OAuth account (typically done through OAuth flow).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GoogleOAuthAccountCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "OAuth account created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/GoogleOAuthAccount"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/oauth-accounts/{id}/": {
      "get": {
        "summary": "Retrieve a Google OAuth account",
        "description": "Get detailed information about a specific Google OAuth account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "OAuth account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth account details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/GoogleOAuthAccount"}
              }
            }
          },
          "404": {
            "description": "OAuth account not found"
          }
        }
      },
      "put": {
        "summary": "Update a Google OAuth account",
        "description": "Update an existing Google OAuth account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "OAuth account ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/GoogleOAuthAccountUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OAuth account updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/GoogleOAuthAccount"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "OAuth account not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Google OAuth account",
        "description": "Delete a Google OAuth account and revoke access.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "OAuth account ID"
          }
        ],
        "responses": {
          "204": {
            "description": "OAuth account deleted successfully"
          },
          "404": {
            "description": "OAuth account not found"
          }
        }
      }
    },
    "/oauth-accounts/{id}/refresh-token/": {
      "post": {
        "summary": "Refresh OAuth token",
        "description": "Refresh the access token for a Google OAuth account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "OAuth account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token refresh failed"
          },
          "404": {
            "description": "OAuth account not found"
          }
        }
      }
    },
    "/invites/": {
      "get": {
        "summary": "List all invites",
        "description": "Retrieve a paginated list of all invites with optional filtering.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "sent", "completed", "cancelled"]
            },
            "description": "Filter by status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by candidate name or vacancy title"
          }
        ],
        "responses": {
          "200": {
            "description": "List of invites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Invite"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new invite",
        "description": "Create a new invite for interview with automatic Google Drive and Calendar setup.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/InviteCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invite created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Invite"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/invites/{id}/": {
      "get": {
        "summary": "Retrieve an invite",
        "description": "Get detailed information about a specific invite.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Invite ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Invite details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Invite"}
              }
            }
          },
          "404": {
            "description": "Invite not found"
          }
        }
      },
      "put": {
        "summary": "Update an invite",
        "description": "Update an existing invite.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Invite ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/InviteUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invite updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Invite"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Invite not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an invite",
        "description": "Delete an invite and remove associated Google Calendar events.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Invite ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Invite deleted successfully"
          },
          "404": {
            "description": "Invite not found"
          }
        }
      }
    },
    "/invites/{id}/regenerate-scorecard/": {
      "post": {
        "summary": "Regenerate scorecard",
        "description": "Regenerate the Google Drive scorecard for an invite.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Invite ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Scorecard regenerated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "file_url": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Scorecard regeneration failed"
          },
          "404": {
            "description": "Invite not found"
          }
        }
      }
    },
    "/invites/{id}/gemini-time-analysis/": {
      "post": {
        "summary": "Get Gemini time analysis",
        "description": "Get AI analysis of interview time from Gemini.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Invite ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Time analysis completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "suggested_datetime": {"type": "string", "format": "date-time"},
                    "cached": {"type": "boolean"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Time analysis failed"
          },
          "404": {
            "description": "Invite not found"
          }
        }
      }
    },
    "/hr-screenings/": {
      "get": {
        "summary": "List all HR screenings",
        "description": "Retrieve a paginated list of all HR screenings.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search by candidate name or position"
          }
        ],
        "responses": {
          "200": {
            "description": "List of HR screenings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/HRScreening"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new HR screening",
        "description": "Create a new HR screening with AI analysis.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/HRScreeningCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "HR screening created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HRScreening"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/hr-screenings/{id}/": {
      "get": {
        "summary": "Retrieve an HR screening",
        "description": "Get detailed information about a specific HR screening.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "HR screening ID"
          }
        ],
        "responses": {
          "200": {
            "description": "HR screening details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HRScreening"}
              }
            }
          },
          "404": {
            "description": "HR screening not found"
          }
        }
      },
      "put": {
        "summary": "Update an HR screening",
        "description": "Update an existing HR screening.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "HR screening ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/HRScreeningUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "HR screening updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HRScreening"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "HR screening not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an HR screening",
        "description": "Delete an HR screening.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "HR screening ID"
          }
        ],
        "responses": {
          "204": {
            "description": "HR screening deleted successfully"
          },
          "404": {
            "description": "HR screening not found"
          }
        }
      }
    },
    "/hr-screenings/{id}/retry-analysis/": {
      "post": {
        "summary": "Retry Gemini analysis",
        "description": "Retry AI analysis of HR screening with Gemini.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "HR screening ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "analysis": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Analysis failed"
          },
          "404": {
            "description": "HR screening not found"
          }
        }
      }
    },
    "/sync-settings/": {
      "get": {
        "summary": "List all sync settings",
        "description": "Retrieve sync settings for users.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sync settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/SyncSettings"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create sync settings",
        "description": "Create new sync settings for a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SyncSettingsCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sync settings created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SyncSettings"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/sync-settings/{id}/": {
      "get": {
        "summary": "Retrieve sync settings",
        "description": "Get sync settings for a specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Sync settings ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sync settings details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SyncSettings"}
              }
            }
          },
          "404": {
            "description": "Sync settings not found"
          }
        }
      },
      "put": {
        "summary": "Update sync settings",
        "description": "Update sync settings for a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Sync settings ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SyncSettingsUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync settings updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SyncSettings"}
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Sync settings not found"
          }
        }
      },
      "delete": {
        "summary": "Delete sync settings",
        "description": "Delete sync settings for a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"},
            "description": "Sync settings ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Sync settings deleted successfully"
          },
          "404": {
            "description": "Sync settings not found"
          }
        }
      }
    },
    "/calendar-events/": {
      "get": {
        "summary": "Get calendar events",
        "description": "Retrieve calendar events from Google Calendar API (cached data).",
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 30
            },
            "description": "Number of days ahead to fetch events"
          },
          {
            "name": "calendar_id",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "primary"
            },
            "description": "Calendar ID to fetch events from"
          }
        ],
        "responses": {
          "200": {
            "description": "List of calendar events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "events": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/CalendarEvent"}
                    },
                    "count": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/drive-files/": {
      "get": {
        "summary": "Get Google Drive files",
        "description": "Retrieve files from Google Drive API (cached data).",
        "parameters": [
          {
            "name": "max_results",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of files to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Drive files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "files": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/DriveFile"}
                    },
                    "count": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/sheets/": {
      "get": {
        "summary": "Get Google Sheets",
        "description": "Retrieve Google Sheets from API (cached data).",
        "parameters": [
          {
            "name": "max_results",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of sheets to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Google Sheets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "sheets": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/GoogleSheet"}
                    },
                    "count": {"type": "integer"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/sync/": {
      "post": {
        "summary": "Sync Google services",
        "description": "Trigger synchronization of Google services (Calendar, Drive, Sheets).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_type": {
                    "type": "string",
                    "enum": ["calendar", "drive", "sheets", "all"]
                  },
                  "force_sync": {
                    "type": "boolean",
                    "default": false
                  },
                  "max_items": {
                    "type": "integer",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["service_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "results": {
                      "type": "object",
                      "properties": {
                        "calendar": {"type": "string"},
                        "drive": {"type": "string"},
                        "sheets": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Sync failed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GoogleOAuthAccount": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "google_id": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "name": {"type": "string"},
          "picture_url": {"type": "string", "format": "uri", "nullable": true},
          "scopes": {
            "type": "array",
            "items": {"type": "string"}
          },
          "is_token_valid": {"type": "boolean", "readOnly": true},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true},
          "last_sync_at": {"type": "string", "format": "date-time", "nullable": true}
        },
        "required": ["user", "google_id", "email", "name", "scopes"]
      },
      "GoogleOAuthAccountCreate": {
        "type": "object",
        "properties": {
          "user": {"type": "integer"},
          "google_id": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "name": {"type": "string"},
          "picture_url": {"type": "string", "format": "uri"},
          "access_token": {"type": "string"},
          "refresh_token": {"type": "string"},
          "token_expires_at": {"type": "string", "format": "date-time"},
          "scopes": {
            "type": "array",
            "items": {"type": "string"}
          }
        },
        "required": ["user", "google_id", "email", "name", "access_token", "token_expires_at", "scopes"]
      },
      "GoogleOAuthAccountUpdate": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "picture_url": {"type": "string", "format": "uri"},
          "access_token": {"type": "string"},
          "refresh_token": {"type": "string"},
          "token_expires_at": {"type": "string", "format": "date-time"},
          "scopes": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "candidate_url": {"type": "string", "format": "uri"},
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "vacancy_title": {"type": "string"},
          "interview_datetime": {"type": "string", "format": "date-time"},
          "status": {
            "type": "string",
            "enum": ["pending", "sent", "completed", "cancelled"]
          },
          "google_drive_folder_id": {"type": "string"},
          "google_drive_file_id": {"type": "string"},
          "google_drive_file_url": {"type": "string", "format": "uri"},
          "calendar_event_id": {"type": "string"},
          "calendar_event_url": {"type": "string", "format": "uri"},
          "google_meet_url": {"type": "string", "format": "uri"},
          "gemini_suggested_datetime": {"type": "string", "format": "date-time", "nullable": true},
          "gemini_analysis": {"type": "string"},
          "original_form_data": {"type": "object"},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["user", "candidate_url", "interview_datetime"]
      },
      "InviteCreate": {
        "type": "object",
        "properties": {
          "candidate_url": {"type": "string", "format": "uri"},
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "vacancy_title": {"type": "string"},
          "interview_datetime": {"type": "string", "format": "date-time"},
          "original_form_data": {"type": "object"}
        },
        "required": ["candidate_url", "interview_datetime"]
      },
      "InviteUpdate": {
        "type": "object",
        "properties": {
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "vacancy_title": {"type": "string"},
          "interview_datetime": {"type": "string", "format": "date-time"},
          "status": {
            "type": "string",
            "enum": ["pending", "sent", "completed", "cancelled"]
          }
        }
      },
      "HRScreening": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "position": {"type": "string"},
          "screening_questions": {"type": "string"},
          "candidate_responses": {"type": "string"},
          "gemini_analysis": {"type": "string"},
          "gemini_score": {"type": "number", "format": "decimal"},
          "gemini_recommendation": {"type": "string"},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["user", "candidate_name", "position", "screening_questions", "candidate_responses"]
      },
      "HRScreeningCreate": {
        "type": "object",
        "properties": {
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "position": {"type": "string"},
          "screening_questions": {"type": "string"},
          "candidate_responses": {"type": "string"}
        },
        "required": ["candidate_name", "position", "screening_questions", "candidate_responses"]
      },
      "HRScreeningUpdate": {
        "type": "object",
        "properties": {
          "candidate_name": {"type": "string"},
          "candidate_email": {"type": "string", "format": "email"},
          "position": {"type": "string"},
          "screening_questions": {"type": "string"},
          "candidate_responses": {"type": "string"}
        }
      },
      "SyncSettings": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user": {"type": "integer"},
          "user_username": {"type": "string", "readOnly": true},
          "auto_sync_calendar": {"type": "boolean"},
          "auto_sync_drive": {"type": "boolean"},
          "sync_interval": {"type": "integer"},
          "max_events": {"type": "integer"},
          "max_files": {"type": "integer"},
          "created_at": {"type": "string", "format": "date-time", "readOnly": true},
          "updated_at": {"type": "string", "format": "date-time", "readOnly": true}
        },
        "required": ["user"]
      },
      "SyncSettingsCreate": {
        "type": "object",
        "properties": {
          "auto_sync_calendar": {"type": "boolean", "default": true},
          "auto_sync_drive": {"type": "boolean", "default": true},
          "sync_interval": {"type": "integer", "default": 60},
          "max_events": {"type": "integer", "default": 100},
          "max_files": {"type": "integer", "default": 100}
        }
      },
      "SyncSettingsUpdate": {
        "type": "object",
        "properties": {
          "auto_sync_calendar": {"type": "boolean"},
          "auto_sync_drive": {"type": "boolean"},
          "sync_interval": {"type": "integer"},
          "max_events": {"type": "integer"},
          "max_files": {"type": "integer"}
        }
      },
      "CalendarEvent": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "start": {
            "type": "object",
            "properties": {
              "dateTime": {"type": "string", "format": "date-time"},
              "date": {"type": "string", "format": "date"}
            }
          },
          "end": {
            "type": "object",
            "properties": {
              "dateTime": {"type": "string", "format": "date-time"},
              "date": {"type": "string", "format": "date"}
            }
          },
          "location": {"type": "string"},
          "attendees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {"type": "string"},
                "displayName": {"type": "string"},
                "responseStatus": {"type": "string"}
              }
            }
          },
          "htmlLink": {"type": "string", "format": "uri"},
          "hangoutLink": {"type": "string", "format": "uri"}
        }
      },
      "DriveFile": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "mimeType": {"type": "string"},
          "size": {"type": "string"},
          "createdTime": {"type": "string", "format": "date-time"},
          "modifiedTime": {"type": "string", "format": "date-time"},
          "webViewLink": {"type": "string", "format": "uri"},
          "webContentLink": {"type": "string", "format": "uri"},
          "parents": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "GoogleSheet": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "mimeType": {"type": "string"},
          "createdTime": {"type": "string", "format": "date-time"},
          "modifiedTime": {"type": "string", "format": "date-time"},
          "webViewLink": {"type": "string", "format": "uri"},
          "parents": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      }
    },
    "securitySchemes": {
      "SessionAuthentication": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "BasicAuthentication": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "SessionAuthentication": []
    },
    {
      "BasicAuthentication": []
    }
  ]
}
