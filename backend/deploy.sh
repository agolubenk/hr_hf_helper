#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(date)

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BACKUP_DIR="../backups"
DEPLOYMENT_LOG="deployment_$(date +%Y%m%d_%H%M%S).log"
MAINTENANCE_FILE=".env.maintenance"

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è backup
create_backup() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ backup –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º..."
    
    mkdir -p "$BACKUP_DIR"
    
    # Backup –∫–æ–¥–∞
    BACKUP_NAME="backend_backup_$(date +%Y%m%d_%H%M%S)"
    cp -r . "$BACKUP_DIR/$BACKUP_NAME"
    log_success "Backup –∫–æ–¥–∞ —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR/$BACKUP_NAME"
    
    # Backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if [ -f "db.sqlite3" ]; then
        cp db.sqlite3 "db.sqlite3.backup_$(date +%Y%m%d_%H%M%S)"
        log_success "Backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω"
    fi
    
    # Backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f "config/settings.py" ]; then
        cp config/settings.py "config/settings.py.backup_$(date +%Y%m%d_%H%M%S)"
        log_success "Backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è maintenance mode
enable_maintenance() {
    log_info "–í–∫–ª—é—á–µ–Ω–∏–µ maintenance mode..."
    echo "SYSTEM_MAINTENANCE=true" > "$MAINTENANCE_FILE"
    log_success "Maintenance mode –≤–∫–ª—é—á–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è maintenance mode
disable_maintenance() {
    log_info "–í—ã–∫–ª—é—á–µ–Ω–∏–µ maintenance mode..."
    if [ -f "$MAINTENANCE_FILE" ]; then
        rm "$MAINTENANCE_FILE"
        log_success "Maintenance mode –≤—ã–∫–ª—é—á–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_services() {
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Django —Å–µ—Ä–≤–µ—Ä–∞
    pkill -f "python.*manage.py runserver" || true
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Celery (–µ—Å–ª–∏ –µ—Å—Ç—å)
    pkill -f "celery" || true
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis (–µ—Å–ª–∏ –µ—Å—Ç—å)
    pkill -f "redis-server" || true
    
    log_success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ
    python3 manage.py runserver 8000 > server.log 2>&1 &
    SERVER_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    if curl -s http://127.0.0.1:8000/ > /dev/null; then
        log_success "Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $SERVER_PID)"
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Django —Å–µ—Ä–≤–µ—Ä"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
health_check() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Django
    if python3 manage.py check --deploy; then
        log_success "Django check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "Django check –ø—Ä–æ–≤–∞–ª–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    if python3 -c "from logic.base.api_client import BaseAPIClient; print('‚úÖ –ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç')"; then
        log_success "–ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        log_error "–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..."
    
    ENDPOINTS=(
        "/api/v1/finance/grades/"
        "/api/v1/vacancies/vacancies/"
        "/api/v1/huntflow/cache/"
    )
    
    for endpoint in "${ENDPOINTS[@]}"; do
        if curl -s -o /dev/null -w "%{http_code}" "http://127.0.0.1:8000$endpoint" | grep -q "40[13]"; then
            log_success "Endpoint $endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            log_warning "Endpoint $endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥"
        fi
    done
    
    log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è rollback
rollback() {
    log_warning "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ rollback..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    stop_services
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ backup
    LATEST_BACKUP=$(ls -t "$BACKUP_DIR"/backend_backup_* | head -1)
    if [ -n "$LATEST_BACKUP" ]; then
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ backup: $LATEST_BACKUP"
        
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–¥–∞
        find . -maxdepth 1 -type f -delete
        find . -maxdepth 1 -type d ! -name . ! -name .. -exec rm -rf {} +
        
        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ backup
        cp -r "$LATEST_BACKUP"/* ./
        cp -r "$LATEST_BACKUP"/.* ./
        
        log_success "Rollback –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "Backup –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è rollback"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_services
    
    # –í—ã–∫–ª—é—á–µ–Ω–∏–µ maintenance mode
    disable_maintenance
    
    log_success "Rollback –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
deploy() {
    log_info "–ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ backup
    create_backup
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ maintenance mode
    enable_maintenance
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    stop_services
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î (–µ—Å–ª–∏ –µ—Å—Ç—å)
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
    if python3 manage.py showmigrations --plan | grep -q "\[ \]"; then
        log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
        python3 manage.py migrate
        log_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
    else
        log_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è"
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_services
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
    if health_check; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º rollback"
        rollback
        exit 1
    fi
    
    # –í—ã–∫–ª—é—á–µ–Ω–∏–µ maintenance mode
    disable_maintenance
    
    log_success "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
status() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Django
    if python3 manage.py check --deploy > /dev/null 2>&1; then
        log_success "Django: ‚úÖ –ó–¥–æ—Ä–æ–≤"
    else
        log_error "Django: ‚ùå –û—à–∏–±–∫–∏"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    if curl -s http://127.0.0.1:8000/ > /dev/null; then
        log_success "–°–µ—Ä–≤–µ—Ä: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_error "–°–µ—Ä–≤–µ—Ä: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ maintenance mode
    if [ -f "$MAINTENANCE_FILE" ]; then
        log_warning "Maintenance mode: ‚ö†Ô∏è –í–∫–ª—é—á–µ–Ω"
    else
        log_success "Maintenance mode: ‚úÖ –í—ã–∫–ª—é—á–µ–Ω"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-deploy}" in
    "deploy")
        deploy
        ;;
    "rollback")
        rollback
        ;;
    "status")
        status
        ;;
    "backup")
        create_backup
        ;;
    "health")
        health_check
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {deploy|rollback|status|backup|health}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy   - –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
        echo "  rollback - –í—ã–ø–æ–ª–Ω–∏—Ç—å rollback"
        echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
        echo "  backup   - –°–æ–∑–¥–∞—Ç—å backup"
        echo "  health   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"
        exit 1
        ;;
esac
