#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞—á ClickUp —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º reject
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth import get_user_model
from apps.clickup_int.models import ClickUpTask

User = get_user_model()

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.objects.first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ ClickUp
        tasks = ClickUpTask.objects.filter(user=user).order_by('-date_created')[:10]
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {tasks.count()}")
        print("\n" + "="*80)
        
        for task in tasks:
            print(f"ID: {task.task_id:12} | –ù–∞–∑–≤–∞–Ω–∏–µ: {task.name[:50]}...")
            print(f"      ‚îî‚îÄ –°—Ç–∞—Ç—É—Å: '{task.status}' | –°–æ–∑–¥–∞–Ω–∞: {task.date_created}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º custom fields
            custom_fields = task.get_custom_fields_display()
            if custom_fields:
                print(f"      ‚îî‚îÄ Custom fields: {len(custom_fields)} –ø–æ–ª–µ–π")
                for field in custom_fields[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"         - {field['name']}: {field['value'][:30]}...")
            
            print()
        
        print("\n" + "="*80)
        print("üîç –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'reject':")
        
        reject_tasks = ClickUpTask.objects.filter(user=user, status__icontains='reject')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º reject: {reject_tasks.count()}")
        
        for task in reject_tasks:
            print(f"   - {task.task_id}: {task.name[:50]}... (—Å—Ç–∞—Ç—É—Å: '{task.status}')")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
