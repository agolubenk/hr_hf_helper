#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–∞ huntflow –≤ ClickUp
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth import get_user_model
from apps.clickup_int.services import ClickUpService

User = get_user_model()

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ClickUp
        user = User.objects.filter(clickup_api_key__isnull=False).exclude(clickup_api_key='').first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ClickUp –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å ClickUp
        clickup_service = ClickUpService(user.clickup_api_key)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π task_id (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∑–∞–¥–∞—á–∏)
        test_task_id = "86c0fuxan"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∑–∞–¥–∞—á–∏ –∏–∑ ClickUp
        
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞ 'huntflow' –∫ –∑–∞–¥–∞—á–µ {test_task_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–µ–≥–∏ –∑–∞–¥–∞—á–∏
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–µ–≥–∏ –∑–∞–¥–∞—á–∏...")
        task_data = clickup_service.get_task(test_task_id)
        if task_data:
            current_tags = task_data.get('tags', [])
            print(f"üìã –¢–µ–∫—É—â–∏–µ —Ç–µ–≥–∏ –∑–∞–¥–∞—á–∏ ({len(current_tags)}):")
            for tag in current_tags:
                if isinstance(tag, dict):
                    tag_name = tag.get('name', 'Unknown')
                    tag_color = tag.get('tag_bg', 'default')
                    print(f"   - {tag_name} (—Ü–≤–µ—Ç: {tag_color})")
                else:
                    print(f"   - {tag}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ {test_task_id}")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ–≥ huntflow
        has_huntflow_tag = any(
            tag.get('name', '').lower() == 'huntflow' 
            for tag in current_tags if isinstance(tag, dict)
        )
        
        if has_huntflow_tag:
            print(f"‚úÖ –¢–µ–≥ 'huntflow' —É–∂–µ –µ—Å—Ç—å —É –∑–∞–¥–∞—á–∏")
        else:
            print(f"‚ùå –¢–µ–≥ 'huntflow' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —É –∑–∞–¥–∞—á–∏")
            
            # –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥
            print(f"\nüè∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ 'huntflow' –∫ –∑–∞–¥–∞—á–µ...")
            success = clickup_service.add_tag_to_task(test_task_id, 'huntflow')
            
            if success:
                print(f"‚úÖ –¢–µ–≥ 'huntflow' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
                updated_task_data = clickup_service.get_task(test_task_id)
                if updated_task_data:
                    updated_tags = updated_task_data.get('tags', [])
                    print(f"üìã –¢–µ–≥–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ({len(updated_tags)}):")
                    
                    has_huntflow_after = False
                    for tag in updated_tags:
                        if isinstance(tag, dict):
                            tag_name = tag.get('name', 'Unknown')
                            tag_color = tag.get('tag_bg', 'default')
                            print(f"   - {tag_name} (—Ü–≤–µ—Ç: {tag_color})")
                            if tag_name.lower() == 'huntflow':
                                has_huntflow_after = True
                        else:
                            print(f"   - {tag}")
                    
                    if has_huntflow_after:
                        print(f"\nüéâ –£–°–ü–ï–•! –¢–µ–≥ 'huntflow' —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å —É –∑–∞–¥–∞—á–∏!")
                    else:
                        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê! –¢–µ–≥ 'huntflow' –≤—Å–µ –µ—â–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥ 'huntflow' –∫ –∑–∞–¥–∞—á–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
