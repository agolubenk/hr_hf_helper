from django.core.management.base import BaseCommand
from apps.google_oauth.cache_service import CacheService


class Command(BaseCommand):
    help = '–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞ API –¥–∞–Ω–Ω—ã—Ö'

    def handle(self, *args, **options):
        stats = CacheService.get_cache_stats()
        
        self.stdout.write(
            self.style.SUCCESS(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ API –¥–∞–Ω–Ω—ã—Ö:')
        )
        self.stdout.write(f'–í—Å–µ–≥–æ –∫–ª—é—á–µ–π: {stats["total_keys"]}')
        
        if stats['services']:
            self.stdout.write('\nüìã –ü–æ —Å–µ—Ä–≤–∏—Å–∞–º:')
            for service, count in stats['services'].items():
                self.stdout.write(f'  {service}: {count} –∫–ª—é—á–µ–π')
        
        if stats['oldest_cache']:
            self.stdout.write(f'\n‚è∞ –°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –∫—ç—à: {stats["oldest_cache"]}')
        
        if stats['newest_cache']:
            self.stdout.write(f'üÜï –°–∞–º—ã–π –Ω–æ–≤—ã–π –∫—ç—à: {stats["newest_cache"]}')
        
        if stats['total_keys'] == 0:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ö—ç—à –ø—É—Å—Ç')
            )
