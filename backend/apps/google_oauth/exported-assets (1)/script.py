# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è

# –ü—Ä–∏–º–µ—Ä –∏–∑ —á–∞—Ç–∞: "—Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º"
test_text = "—Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º"

print("üß™ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è")
print(f"–¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: '{test_text}'")

import re

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ –∫–æ–¥–∞
date_patterns = [
    r'(\d{4}-\d{1,2}-\d{1,2})',  # 2025-09-15
    r'(\d{2}\.\d{2}\.\d{4})',    # 15.09.2025
    r'(\d{2}\d{2}\d{4})'         # 15092025
]

time_patterns = [
    r'(\d{1,2}:\d{2})',          # 14:00, 9:30
    r'(\d{1,2}\d{2}\d{4})',      # 140000
]

weekdays = [
    '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞', '—Å—É–±–±–æ—Ç–∞', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
    'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday',
    '–ø–Ω', '–≤—Ç', '—Å—Ä', '—á—Ç', '–ø—Ç', '—Å–±', '–≤—Å',
    'mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun',
    '–ø–æ–Ω–µ–¥–µ–ª', '–≤—Ç–æ—Ä–Ω', '—Å—Ä–µ–¥–∏', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏', '—Å—É–±–±–æ—Ç—É', '–≤–æ—Å–∫—Ä–µ—Å',
    'MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'
]

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —É—Å–ª–æ–≤–∏–µ
has_date = any(re.search(pattern, test_text, re.IGNORECASE) for pattern in date_patterns)
has_time = any(re.search(pattern, test_text, re.IGNORECASE) for pattern in time_patterns)
has_weekday = any(day in test_text.lower() for day in weekdays)

print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
print(f"   has_date: {has_date}")
print(f"   has_time: {has_time}")
print(f"   has_weekday: {has_weekday}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã
relative_dates = ['—Å–µ–≥–æ–¥–Ω—è', '–∑–∞–≤—Ç—Ä–∞', '–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '–≤—á–µ—Ä–∞', '–ø–æ–∑–∞–≤—á–µ—Ä–∞']
has_relative_date = any(rel_date in test_text.lower() for rel_date in relative_dates)
print(f"   has_relative_date: {has_relative_date}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–∞ —Å—É—Ç–æ–∫
time_periods = ['—É—Ç—Ä–æ–º', '–¥–Ω–µ–º', '–¥–Ω—ë–º', '–≤–µ—á–µ—Ä–æ–º', '–Ω–æ—á—å—é', '—É—Ç—Ä–∞', '–¥–Ω—è', '–≤–µ—á–µ—Ä–∞', '–Ω–æ—á–∏']
has_time_period = any(period in test_text.lower() for period in time_periods)
print(f"   has_time_period: {has_time_period}")

text_length = len(test_text.strip())
print(f"   text_length: {text_length}")

# –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∑ –∫–æ–¥–∞
if has_date or has_time or has_weekday and text_length < 200:
    action_type = "invite"
elif text_length < 100:
    action_type = "hrscreening"  
else:
    action_type = "hrscreening"

print(f"\nüéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø: {action_type}")

print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê:")
print("   –õ–æ–≥–∏–∫–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã ('—Å–µ–≥–æ–¥–Ω—è') –∏ –≤—Ä–µ–º–µ–Ω–∞ —Å—É—Ç–æ–∫ ('–≤–µ—á–µ—Ä–æ–º')")
print("   –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏")
print("   '—Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å invite, –Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫ hrscreening")

print("\nüí° –†–ï–®–ï–ù–ò–ï:")
print("   –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∞ —Å—É—Ç–æ–∫ –≤ —É—Å–ª–æ–≤–∏–µ –¥–ª—è invite")