from django.core.management.base import BaseCommand
from apps.accounts.logic.role_service import RoleService


class Command(BaseCommand):
    help = "–°–æ–∑–¥–∞—ë—Ç –≥—Ä—É–ø–ø—ã —Ä–æ–ª–µ–π –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"

    def add_arguments(self, parser):
        parser.add_argument(
            '--validate',
            action='store_true',
            help='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤',
        )
        parser.add_argument(
            '--stats',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–æ–ª—è–º',
        )

    def handle(self, *args, **options):
        if options['validate']:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∞–≤
            validation_result = RoleService.validate_role_permissions()
            if validation_result['valid']:
                self.stdout.write(self.style.SUCCESS("‚úÖ –í—Å–µ —Ä–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"))
            else:
                self.stdout.write(self.style.ERROR("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–æ–ª—è–º–∏:"))
                for issue in validation_result['issues']:
                    self.stdout.write(self.style.WARNING(f"  - {issue}"))
            return

        if options['stats']:
            # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = RoleService.get_role_statistics()
            self.stdout.write(self.style.SUCCESS("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º:"))
            for role_name, data in stats.items():
                if data.get('exists', True):
                    self.stdout.write(f"  {role_name}: {data['users_count']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {data['permissions_count']} –ø—Ä–∞–≤")
                else:
                    self.stdout.write(self.style.WARNING(f"  {role_name}: –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢"))
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤
        result = RoleService.create_roles_and_permissions()
        
        self.stdout.write(self.style.SUCCESS("‚úÖ –ì—Ä—É–ø–ø—ã –∏ –ø—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã."))
        self.stdout.write(f"  - –°–æ–∑–¥–∞–Ω–æ –≥—Ä—É–ø–ø: {result['created_groups']}")
        self.stdout.write(f"  - –í—Å–µ–≥–æ –ø—Ä–∞–≤: {result['total_permissions']}")
        self.stdout.write(f"  - View –ø—Ä–∞–≤: {result['view_permissions']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
        validation_result = RoleService.validate_role_permissions()
        if not validation_result['valid']:
            self.stdout.write(self.style.WARNING("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏:"))
            for issue in validation_result['issues']:
                self.stdout.write(self.style.WARNING(f"  - {issue}"))
