"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group
from apps.accounts.models import User


class Command(BaseCommand):
    help = '–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —É –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π',
        )
        parser.add_argument(
            '--username',
            type=str,
            help='–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']
        username = options.get('username')

        if dry_run:
            self.stdout.write(
                self.style.WARNING('üîç –†–ï–ñ–ò–ú –ü–†–û–°–ú–û–¢–†–ê - –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã')
            )

        try:
            observer_group = Group.objects.get(name='–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏')
        except Group.DoesNotExist:
            self.stdout.write(
                self.style.ERROR('‚ùå –ì—Ä—É–ø–ø–∞ "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
            )
            return

        if username:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                user = User.objects.get(username=username)
                users = [user]
            except User.DoesNotExist:
                self.stdout.write(
                    self.style.ERROR(f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "{username}" –Ω–µ –Ω–∞–π–¥–µ–Ω')
                )
                return
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è
            users = User.objects.filter(groups__name='–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏').distinct()

        if not users:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            )
            return

        self.stdout.write(
            self.style.SUCCESS(f'üîç –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è: {len(users)}')
        )

        removed_count = 0
        kept_count = 0

        for user in users:
            current_groups = [g.name for g in user.groups.all()]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            self.stdout.write(f'\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} ({user.email})')
            self.stdout.write(f'   –¢–µ–∫—É—â–∏–µ –≥—Ä—É–ø–ø—ã: {current_groups}')
            self.stdout.write(f'   –°—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è: {user.is_observer_active}')

            if not dry_run:
                # –£–¥–∞–ª—è–µ–º –≥—Ä—É–ø–ø—É –ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏
                user.groups.remove(observer_group)
                user.is_observer_active = False
                user.save()

                removed_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'   ‚úÖ –°—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω')
                )
            else:
                # –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ
                if '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª–∏' in current_groups:
                    removed_count += 1
                    self.stdout.write(
                        self.style.WARNING(f'   ‚ö†Ô∏è –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è')
                    )
                else:
                    kept_count += 1
                    self.stdout.write(
                        self.style.SUCCESS(f'   ‚úÖ –°—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
                    )

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stdout.write(f'\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
        if dry_run:
            self.stdout.write(f'   –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è: {removed_count}')
            self.stdout.write(f'   –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {kept_count}')
            self.stdout.write(
                self.style.WARNING('\n‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ --dry-run')
            )
        else:
            self.stdout.write(f'   –°—Ç–∞—Ç—É—Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω: {removed_count}')
            self.stdout.write(
                self.style.SUCCESS('üéâ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
            )
