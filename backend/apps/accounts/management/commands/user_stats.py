"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from django.core.management.base import BaseCommand
from apps.accounts.logic.user_service import UserService
from apps.accounts.logic.role_service import RoleService


class Command(BaseCommand):
    help = "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–æ–ª–µ–π"

    def handle(self, *args, **options):
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_stats = UserService.get_user_stats()
        self.stdout.write(self.style.SUCCESS("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"))
        self.stdout.write(f"  - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_stats['total_users']}")
        self.stdout.write(f"  - –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_stats['active_users']}")
        self.stdout.write(f"  - –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {user_stats['staff_users']}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
        self.stdout.write("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º:")
        for group_name, count in user_stats['groups_stats'].items():
            self.stdout.write(f"  - {group_name}: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º
        role_stats = RoleService.get_role_statistics()
        self.stdout.write("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º:")
        for role_name, data in role_stats.items():
            if data.get('exists', True):
                self.stdout.write(f"  - {role_name}: {data['users_count']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {data['permissions_count']} –ø—Ä–∞–≤")
            else:
                self.stdout.write(self.style.WARNING(f"  - {role_name}: –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢"))
