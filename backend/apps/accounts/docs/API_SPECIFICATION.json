{
  "openapi": "3.0.0",
  "info": {
    "title": "Accounts App API",
    "description": "Полная спецификация API для приложения accounts",
    "version": "1.0.0",
    "contact": {
      "name": "HR Helper Team"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/users/": {
      "get": {
        "summary": "Список пользователей",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "default": 1}
          }
        ],
        "responses": {
          "200": {
            "description": "Список пользователей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/User"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password", "password_confirm"],
                "properties": {
                  "username": {"type": "string"},
                  "email": {"type": "string", "format": "email"},
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "password": {"type": "string", "minLength": 8},
                  "password_confirm": {"type": "string"},
                  "telegram_username": {"type": "string", "maxLength": 64},
                  "active_system": {"type": "string", "enum": ["prod", "sandbox"], "default": "sandbox"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ValidationError"}
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/": {
      "get": {
        "summary": "Получение пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Данные пользователя",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "404": {
            "description": "Пользователь не найден"
          }
        }
      },
      "put": {
        "summary": "Обновление пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "telegram_username": {"type": "string", "maxLength": 64},
                  "active_system": {"type": "string", "enum": ["prod", "sandbox"]}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь обновлен",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {
            "description": "Пользователь удален"
          }
        }
      }
    },
    "/api/users/profile/": {
      "get": {
        "summary": "Профиль текущего пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "responses": {
          "200": {
            "description": "Профиль пользователя",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/UserProfile"}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Обновление профиля",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "telegram_username": {"type": "string", "maxLength": 64}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Профиль обновлен",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/UserProfile"}
              }
            }
          }
        }
      }
    },
    "/api/users/change-password/": {
      "post": {
        "summary": "Смена пароля",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_password", "new_password", "new_password_confirm"],
                "properties": {
                  "old_password": {"type": "string"},
                  "new_password": {"type": "string", "minLength": 8},
                  "new_password_confirm": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пароль изменен",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/settings/": {
      "get": {
        "summary": "Настройки пользователя",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "responses": {
          "200": {
            "description": "Настройки пользователя",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/UserSettings"}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Обновление настроек",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UserSettings"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Настройки обновлены",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/UserSettings"}
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/assign-groups/": {
      "post": {
        "summary": "Назначение групп пользователю",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["group_ids"],
                "properties": {
                  "group_ids": {
                    "type": "array",
                    "items": {"type": "integer"}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Группы назначены",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "integer"},
                        "username": {"type": "string"},
                        "groups_display": {
                          "type": "array",
                          "items": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/stats/": {
      "get": {
        "summary": "Статистика пользователей",
        "tags": ["Users"],
        "security": [{"SessionAuth": []}],
        "responses": {
          "200": {
            "description": "Статистика пользователей",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/UserStats"}
              }
            }
          }
        }
      }
    },
    "/api/groups/": {
      "get": {
        "summary": "Список групп",
        "tags": ["Groups"],
        "security": [{"SessionAuth": []}],
        "responses": {
          "200": {
            "description": "Список групп",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {"type": "integer"},
                    "next": {"type": "string", "nullable": true},
                    "previous": {"type": "string", "nullable": true},
                    "results": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Group"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}/": {
      "get": {
        "summary": "Получение группы",
        "tags": ["Groups"],
        "security": [{"SessionAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Данные группы",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Group"}
              }
            }
          }
        }
      }
    },
    "/accounts/api/login/": {
      "post": {
        "summary": "Вход в систему",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {"type": "string"},
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешный вход",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/UserProfile"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка аутентификации",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "error": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/api/logout/": {
      "post": {
        "summary": "Выход из системы",
        "tags": ["Authentication"],
        "security": [{"SessionAuth": []}],
        "responses": {
          "200": {
            "description": "Успешный выход",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/api/test-gemini/": {
      "post": {
        "summary": "Тестирование Gemini API",
        "tags": ["API Testing"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат тестирования",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiTestResult"}
              }
            }
          }
        }
      }
    },
    "/accounts/api/test-huntflow/": {
      "post": {
        "summary": "Тестирование Huntflow API",
        "tags": ["API Testing"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {"type": "string"},
                  "api_url": {"type": "string"},
                  "system": {"type": "string", "enum": ["prod", "sandbox"]}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат тестирования",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiTestResult"}
              }
            }
          }
        }
      }
    },
    "/accounts/api/test-clickup/": {
      "post": {
        "summary": "Тестирование ClickUp API",
        "tags": ["API Testing"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат тестирования",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiTestResult"}
              }
            }
          }
        }
      }
    },
    "/accounts/api/test-notion/": {
      "post": {
        "summary": "Тестирование Notion API",
        "tags": ["API Testing"],
        "security": [{"SessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат тестирования",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiTestResult"}
              }
            }
          }
        }
      }
    },
    "/accounts/google-oauth/": {
      "get": {
        "summary": "Google OAuth перенаправление",
        "tags": ["Authentication"],
        "responses": {
          "302": {
            "description": "Перенаправление на Google OAuth"
          }
        }
      }
    },
    "/accounts/google-oauth-callback/": {
      "get": {
        "summary": "Google OAuth callback",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "302": {
            "description": "Перенаправление после успешной аутентификации"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "SessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "username": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "first_name": {"type": "string"},
          "last_name": {"type": "string"},
          "full_name": {"type": "string", "readOnly": true},
          "telegram_username": {"type": "string", "maxLength": 64},
          "groups": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Group"},
            "readOnly": true
          },
          "groups_display": {
            "type": "array",
            "items": {"type": "string"},
            "readOnly": true
          },
          "gemini_api_key": {"type": "string", "maxLength": 256},
          "clickup_api_key": {"type": "string", "maxLength": 256},
          "notion_integration_token": {"type": "string", "maxLength": 256},
          "huntflow_prod_url": {"type": "string", "format": "uri"},
          "huntflow_prod_api_key": {"type": "string", "maxLength": 256},
          "huntflow_sandbox_url": {"type": "string", "format": "uri"},
          "huntflow_sandbox_api_key": {"type": "string", "maxLength": 256},
          "active_system": {"type": "string", "enum": ["prod", "sandbox"], "default": "sandbox"},
          "interviewer_calendar_url": {"type": "string", "format": "uri"},
          "is_observer_active": {"type": "boolean", "default": false},
          "is_active": {"type": "boolean", "readOnly": true},
          "is_staff": {"type": "boolean", "readOnly": true},
          "is_superuser": {"type": "boolean", "readOnly": true},
          "is_admin": {"type": "boolean", "readOnly": true},
          "is_recruiter": {"type": "boolean", "readOnly": true},
          "is_interviewer": {"type": "boolean", "readOnly": true},
          "is_observer": {"type": "boolean", "readOnly": true},
          "date_joined": {"type": "string", "format": "date-time", "readOnly": true},
          "last_login": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}
        },
        "required": ["username"]
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "username": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "first_name": {"type": "string"},
          "last_name": {"type": "string"},
          "full_name": {"type": "string", "readOnly": true},
          "telegram_username": {"type": "string", "maxLength": 64},
          "groups_display": {
            "type": "array",
            "items": {"type": "string"},
            "readOnly": true
          },
          "active_system": {"type": "string", "enum": ["prod", "sandbox"]},
          "interviewer_calendar_url": {"type": "string", "format": "uri"},
          "is_observer_active": {"type": "boolean"},
          "is_active": {"type": "boolean", "readOnly": true},
          "is_staff": {"type": "boolean", "readOnly": true},
          "is_admin": {"type": "boolean", "readOnly": true},
          "is_recruiter": {"type": "boolean", "readOnly": true},
          "is_interviewer": {"type": "boolean", "readOnly": true},
          "is_observer": {"type": "boolean", "readOnly": true},
          "date_joined": {"type": "string", "format": "date-time", "readOnly": true},
          "last_login": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "gemini_api_key": {"type": "string", "maxLength": 256},
          "clickup_api_key": {"type": "string", "maxLength": 256},
          "notion_integration_token": {"type": "string", "maxLength": 256},
          "huntflow_prod_url": {"type": "string", "format": "uri"},
          "huntflow_prod_api_key": {"type": "string", "maxLength": 256},
          "huntflow_sandbox_url": {"type": "string", "format": "uri"},
          "huntflow_sandbox_api_key": {"type": "string", "maxLength": 256},
          "active_system": {"type": "string", "enum": ["prod", "sandbox"]},
          "interviewer_calendar_url": {"type": "string", "format": "uri"},
          "is_observer_active": {"type": "boolean"}
        }
      },
      "UserStats": {
        "type": "object",
        "properties": {
          "total_users": {"type": "integer"},
          "active_users": {"type": "integer"},
          "staff_users": {"type": "integer"},
          "groups_stats": {
            "type": "object",
            "additionalProperties": {"type": "integer"}
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "name": {"type": "string"},
          "permissions": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Permission"},
            "readOnly": true
          }
        },
        "required": ["name"]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "readOnly": true},
          "name": {"type": "string", "readOnly": true},
          "codename": {"type": "string", "readOnly": true},
          "content_type": {
            "type": "object",
            "properties": {
              "id": {"type": "integer"},
              "app_label": {"type": "string"},
              "model": {"type": "string"}
            },
            "readOnly": true
          }
        }
      },
      "ApiTestResult": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "message": {"type": "string"},
          "error": {"type": "string"},
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "field_name": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Управление пользователями"
    },
    {
      "name": "Groups",
      "description": "Управление группами и ролями"
    },
    {
      "name": "Authentication",
      "description": "Аутентификация и авторизация"
    },
    {
      "name": "API Testing",
      "description": "Тестирование внешних API"
    }
  ]
}
