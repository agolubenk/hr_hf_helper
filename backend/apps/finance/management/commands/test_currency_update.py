"""
Django –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
"""
from django.core.management.base import BaseCommand
from config.celery import app
import logging

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ Celery'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç'))
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            self.stdout.write('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤...')
            result = app.send_task('config.celery.update_currency_rates').get()
            
            if result['success']:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ {result["message"]}')
                )
                self.stdout.write(f'üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫—É—Ä—Å–æ–≤: {result["updated_count"]}')
                
                # –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏ –ø–æ –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç–µ
                if 'results' in result:
                    for currency, data in result['results'].items():
                        if data['success']:
                            self.stdout.write(
                                f'  üí∞ {currency}: {data["rate"]} BYN '
                                f'({"—Å–æ–∑–¥–∞–Ω" if data["created"] else "–æ–±–Ω–æ–≤–ª–µ–Ω"})'
                            )
                        else:
                            self.stdout.write(
                                self.style.WARNING(f'  ‚ö†Ô∏è {currency}: –æ—à–∏–±–∫–∞ - {data["error"]}')
                            )
            else:
                self.stdout.write(
                    self.style.ERROR(f'‚ùå {result["message"]}')
                )
                
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}')
            )
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤: {e}')
            raise
